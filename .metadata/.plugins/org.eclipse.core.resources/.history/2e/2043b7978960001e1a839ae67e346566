package com.make.manage.controller;

import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.make.manage.dto.MemberDTO;
import com.make.manage.service.MemberService;

import lombok.RequiredArgsConstructor;

// public class MemberController //
@Controller
@RequiredArgsConstructor
public class MemberController {
	private final MemberService memberService;
	
	// main - 메인페이지 이동
	@GetMapping("/")
	public String main() {
		return "index";
	}
	
	
	// save - 회원가입 화면으로 이동
	@GetMapping("/member/save")
	public String saveForm() {
		return "saveForm";
	}
	
	
	// save - 회원가입 처리
	@PostMapping("/member/save")
	public String save(@ModelAttribute MemberDTO memberDTO) {
		int saveResult = memberService.save(memberDTO);
		//System.out.println("saveResult = " + saveResult);
		if(saveResult > 0) {
			return "login";
		} else {
			return "save";
		}
	}
	
	
	// login - 로그인 페이지 이동
	@GetMapping("/member/login")
	public String login() {
		return "login";
	}
	
	
	// login - 로그인 처리
	@PostMapping("/member/login")
	public String login(@ModelAttribute MemberDTO memberDTO, HttpSession session) {
		boolean loginResult = memberService.login(memberDTO);
		if(loginResult) {
			session.setAttribute("loginEmail", memberDTO.getMemberEmail());
			return "main";
			
		} else {
			return "login";
		}
	}
	
	
	// 회원목록 출력
	@GetMapping("/member/list")
	public String findAll(Model m) {
		List<MemberDTO> memberDTOList = memberService.findAll();
		m.addAttribute("memberList", memberDTOList);
		return "list";
	}
	
	
	// 회원 상세페이지
	@GetMapping("/member/detail")
	public String findById(@RequestParam("id") Long id, Model m) {
		MemberDTO memberDTO = memberService.findById(id);
		m.addAttribute("member", memberDTO);
		return "detail";
	}
	
	
	// 회원정보 삭제
	@GetMapping("/member/delete")
	public String delete(@RequestParam("id") Long id) {
		memberService.delete(id);
		return "redirect:/member/list";
	}
	
	
	// 회원정보 수정 페이지 이동
	@GetMapping("/member/update")
	public String updateForm(HttpSession session, Model m) {
		// 세션에 저장된 나의 이메일 가져오기
		String 		loginEmail = (String)session.getAttribute("loginEmail");
		MemberDTO 	memberDTO = memberService.findByMemberEmail(loginEmail);
		m.addAttribute("member", memberDTO);
		return "update";
	}
	
	
	// 회원정보 수정
	@PostMapping("/member/update")
	public String update(@ModelAttribute MemberDTO memberDTO) {
		boolean result = memberService.update(memberDTO);
		if(result) {
			return "redirect:/member/detail?id=" + memberDTO.getId();
		} else {
			return "index";
		}
	}
	
	
	// 이메일 체크
	@PostMapping("/member/email-check")
	@ResponseBody
	public String emailCheck(@RequestParam("memberEmail") String memberEmail) {
		System.out.println("memberEmail = " + memberEmail);
		String checkResult = memberService.emailCheck(memberEmail);
		return checkResult;
	}
	
	
} // End - public class MemberController


